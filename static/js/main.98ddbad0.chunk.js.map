{"version":3,"sources":["Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","value","setValue","Math","floor","random","faktor1","setFaktor1","faktor2","setFaktor2","rightCounter","setRightCounter","wrongCounter","setWrongCounter","handleSubmit","e","type","onKeyPress","key","onChange","target","onClick","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAGe,SAASA,IACpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAASG,KAAKC,MAAsB,GAAhBD,KAAKE,WAAvD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BP,mBAASG,KAAKC,MAAsB,GAAhBD,KAAKE,WAAvD,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCT,mBAAS,GAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KACA,EAAwCX,mBAAS,GAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KAOMC,EAAe,SAAAC,GAIbT,EAAUE,GAAWP,GACrBM,EAAWJ,KAAKC,MAAsB,GAAhBD,KAAKE,WAC3BI,EAAWN,KAAKC,MAAsB,GAAhBD,KAAKE,WAC3BM,EAAgBD,EAAa,IAG7BG,EAAgBD,EAAa,GAEjCV,EAAS,KASb,OACI,gCACI,+BAAMI,EAAN,MAAoBE,EAApB,QACA,uBAAOP,MAAOA,EAAOe,KAAK,SAASC,WATpB,SAAAF,GACL,UAAVA,EAAEG,KACFJ,KAO+DK,SA3BlD,SAAAJ,GACjBb,EAASa,EAAEK,OAAOnB,UA2Bd,8BACA,wBAAQoB,QAASP,EAAcE,KAAK,SAApC,qBAEA,sBAAKM,UAAU,UAAf,UACI,sBAAKA,UAAU,UAAf,gCACyBZ,KAEzB,sBAAKY,UAAU,UAAf,+BACwBV,W,MCrCzBW,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.98ddbad0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './Counter.css';\n\nexport default function Counter() {\n    const [value, setValue] = useState(\"\")\n    const [faktor1, setFaktor1] = useState(Math.floor(Math.random() * 11))\n    const [faktor2, setFaktor2] = useState(Math.floor(Math.random() * 11))\n    const [rightCounter, setRightCounter] = useState(0)\n    const [wrongCounter, setWrongCounter] = useState(0)\n\n    let sum = faktor1 * faktor2\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    };\n    const handleSubmit = e => {\n        // e.preventDefault();\n        // alert(value);\n        \n        if (faktor1 * faktor2 == value) {\n            setFaktor1(Math.floor(Math.random() * 11));\n            setFaktor2(Math.floor(Math.random() * 11));\n            setRightCounter(rightCounter+1);\n            \n        } else {\n            setWrongCounter(wrongCounter+1);\n        };       \n        setValue(\"\");\n    };\n\n    const handleKeypress = e => {\n        if (e.key === 'Enter') {\n            handleSubmit();\n        }\n    };\n\n    return (\n        <div>\n            <h1>{ faktor1 } * { faktor2 } =</h1>\n            <input value={value} type=\"number\" onKeyPress={handleKeypress} onChange={handleChange}/>\n            <div>\n            <button onClick={handleSubmit} type=\"submit\">klick</button>\n            </div>\n            <div className=\"counter\">\n                <div className=\"counter\">\n                    Richtige Anworten: { rightCounter }\n                </div>\n                <div className=\"counter\">\n                    Falsche Anworten: { wrongCounter }\n                </div>\n            </div>\n        </div>\n    )\n}","import Counter from './Counter'\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Counter />      \n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}